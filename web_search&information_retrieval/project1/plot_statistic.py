import matplotlib.pyplot as plt
import numpy as np

data_top = {
    0.75: {
        9377: 0.00018010256314134285,
        2349: 0.00017423146997644777,
        7314: 0.00017122466862267313,
        5840: 0.00013827814241471599,
        3344: 0.0001332857488173366,
        4368: 0.00012268693425140535,
        4434: 0.0001209033172732973,
        5907: 0.00012088744017387857,
        4351: 0.00012031835109702853,
        4651: 0.0001203050431906757,
        4427: 0.0001191875757407403,
        8316: 0.0001190698095289576,
        9395: 0.00011882785885313536,
        1886: 0.0001184505482984566,
        6029: 0.00011808706661252405,
        1476: 0.00011715008308464297,
        3482: 0.00011701850640579058,
        323: 0.0001170048756826037,
        6797: 0.00011686295222976924,
        1194: 0.00011685598074199481
    },
    0.8: {
        9377: 0.0001853860733535963,
        2349: 0.00017920888913567948,
        7314: 0.00017581552063571478,
        5840: 0.00014078019435017497,
        3344: 0.00013758611566839644,
        4368: 0.0001242059478127183,
        4434: 0.0001222892146014781,
        5907: 0.000122286029974905,
        4351: 0.00012170356865394347,
        4651: 0.00012138175798717747,
        4427: 0.0001204481310276333,
        8316: 0.0001203359956414984,
        9395: 0.0001200886998190854,
        1886: 0.00011968099404858906,
        6029: 0.0001193254470868835,
        1476: 0.00011827142492304985,
        3482: 0.0001181522601575929,
        323: 0.0001181197268388084,
        6797: 0.00011799103649340171,
        1194: 0.00011799103649340171
    },
    0.85: {
        9377: 0.00019066252036845308,
        2349: 0.0001841897578921058,
        7314: 0.0001803864199920985,
        5840: 0.00014327595056964637,
        3344: 0.00013987992001813888,
        4368: 0.0001277580061676002,
        4434: 0.0001296742068601298,
        5907: 0.00012368544685956354,
        4351: 0.00012962473816158,
        4651: 0.000127387762906362,
        4427: 0.00012170640760590068,
        8316: 0.00012160586837691,
        9395: 0.00012031506253219224,
        1886: 0.0001209115566522081,
        6029: 0.00012056793252140866,
        1476: 0.0001193900430978671,
        3482: 0.00011928595452505456,
        323: 0.00011923724114312275,
        6797: 0.00011911965862542702,
        1194: 0.00011911965862542702
    },
    0.9: {
        9377: 0.00019593190528720955,
        2349: 0.0001891740544013589,
        7314: 0.00018493731199332822,
        5840: 0.00014576540021403854,
        3344: 0.00014216715169082606,
        4368: 0.00012724649589177227,
        4434: 0.0001250582969600322,
        5907: 0.00012508574016084444,
        4351: 0.00012448559281802378,
        4651: 0.00012407695303537868,
        4427: 0.0001296241362150313,
        8316: 0.00012286658553706814,
        9395: 0.0001203557523470455,
        1886: 0.00012124248442157,
        6029: 0.0001214152929168753,
        1476: 0.00012050594244535742,
        3482: 0.00012041959813495494,
        323: 0.00012035037916233,
        6797: 0.0001202488245696428,
        1194: 0.0001202488245696428
    },
    0.95: {
        9377: 0.00020119422624500165,
        2349: 0.0001941615742573066,
        7314: 0.0001884681498428576,
        5840: 0.00014824853158297745,
        3344: 0.00014444780018317002,
        4368: 0.0001287680361717401,
        4434: 0.0001264444939407735,
        5907: 0.0001264868555527292,
        4351: 0.0001254289240923083,
        4651: 0.000124264455540448,
        4427: 0.0001242161594459094,
        8316: 0.0001241309307382325,
        9395: 0.00012035755822755224,
        1886: 0.000123730804873984,
        6029: 0.0001205624309331352,
        1476: 0.00012161912697621394,
        3482: 0.00012155319832851092,
        323: 0.00012146712384783004,
        6797: 0.00012137855451782752,
        1194: 0.00012137855451782752
    }
}

data_topdown = {
    0.75: {
        9377: 0.00018010256314134285,
        2349: 0.00017423146997644777,
        7314: 0.00017122466362267313,
        5840: 0.00013827814241471599,
        3344: 0.00013528574828173366,
        4368: 0.00012268699435140535,
        4434: 0.0001209033177739737,
        5907: 0.00012088741077837857,
        4351: 0.00012031835109702853,
        4651: 0.000120360431906757,
        4427: 0.00011918757547047403,
        8316: 0.00011906890059289576,
        9395: 0.00011828785885313536,
        1886: 0.00011845054829485656,
        6029: 0.00011808706661252045,
        1476: 0.00011715008308464297,
        3482: 0.00011701850640579058,
        323: 0.00011700498756826327,
        6797: 0.00011686295222976924,
        1134: 0.00011685598074198481,
        4640: 9.48774821705140256e-05,
        9465: 9.48116482922710226e-05,
        608: 9.4797720127442056e-05,
        5175: 9.4786467430466568e-05,
        4762: 9.4759184048580546e-05,
        968: 9.474269356804786e-05,
        2931: 9.4739997802215126e-05,
        1204: 9.4560901506332596e-05,
        9714: 9.446462925166696e-05,
        1224: 9.4466621359627696e-05,
        8665: 9.4454271811872386e-05,
        1336: 9.4429719497394986e-05,
        7731: 9.441571325610885e-05,
        3528: 9.43286879252526e-05,
        9140: 9.42974611472748e-05,
        4609: 9.4216406283599256e-05,
        7102: 9.41294502146816e-05,
        9848: 9.4031129751911716e-05,
        2736: 9.3628892749764326e-05,
        6704: 9.3134173956889176e-05
    },
    0.8: {
        9377: 0.00018538607335359563,
        2349: 0.00017920888913567948,
        7314: 0.00017881552063571478,
        5840: 0.00014078019435017497,
        3344: 0.00013758611566839644,
        4368: 0.0001242059478127138,
        4434: 0.000122882146014781,
        5907: 0.000122280209074905,
        4351: 0.00012170356685937487,
        4651: 0.0001218175798717747,
        4427: 0.000120481310275823,
        8316: 0.0001203359956144984,
        9395: 0.00012008869989190854,
        1886: 0.00011968090404585096,
        6029: 0.0001193254470868385,
        1476: 0.00011827142492304086,
        3482: 0.0001181522610575929,
        323: 0.0001181197268888081,
        6797: 0.0001179910349340171,
        1134: 0.0001179910349340171,
        4640: 9.4536553499672996e-05,
        9465: 9.445988375297896e-05,
        608: 9.4451930952873466e-05,
        5175: 9.443772086643646e-05,
        4762: 9.407617960446536e-05,
        968: 9.439185125003106e-05,
        2931: 9.438990309567046e-05,
        1204: 9.4198837977683826e-05,
        9714: 9.40697909184346e-05,
        1224: 9.4087671143488176e-05,
        8665: 9.4084127600425976e-05,
        1336: 9.4059152525529136e-05,
        7731: 9.404402501936266e-05,
        3528: 9.3949196615461076e-05,
        9140: 9.3918864768181376e-05,
        4609: 9.383044307363766e-05,
        7102: 9.37380468428416e-05,
        9848: 9.3630408432893386e-05,
        2736: 9.320378067712056e-05,
        6704: 9.26755535371284e-05
    },
    0.85: {
        9377: 0.000195953190528720955,
        2349: 0.0001841897578921058,
        7314: 0.0001803864199920985,
        5840: 0.00014576540021403854,
        3344: 0.00014216715169082606,
        4368: 0.0001277580061676002,
        4434: 0.000129674206801298,
        5907: 0.00012368548635955354,
        4351: 0.000120926473816518,
        4651: 0.000122787762906362,
        4427: 0.0001217604760590088,
        8316: 0.0001216015888376917,
        9395: 0.0001215026532129224,
        1886: 0.0001209155656320208,
        6029: 0.00012065973524140866,
        1476: 0.0001193900439078671,
        3482: 0.000119285945250545,
        323: 0.0001192374413413277,
        6797: 0.0001191196586254274,
        1134: 0.0001191196586254274,
        4640: 9.419569593117996e-05,
        9465: 9.410738577286296e-05,
        608: 9.4106272478062886e-05,
        5175: 9.40888440913140676e-05,
        4762: 9.4055777116408266e-05,
        968: 9.4404961725873936e-05,
        2931: 9.4038977660505226e-05,
        1204: 9.3836937786107466e-05,
        9714: 9.372928140048126e-05,
        1224: 9.3714255990721566e-05,
        8665: 9.370819267826776e-05,
        1336: 9.368869332197556e-05,
        7731: 9.3672409148433896e-05,
        3528: 9.356963321291286e-05,
        9140: 9.354046483106156e-05,
        4609: 9.3444427050634196e-05,
        7102: 9.3346642498796096e-05,
        9848: 9.32293785629306e-05,
        2736: 9.2778632281966086e-05,
        6704: 9.2216819059128916e-05
    },
    0.9: {
        9377: 0.00020119422624500165,
        2349: 0.0001981740544013589,
        7314: 0.00018493731199232822,
        5840: 0.00014824853158297745,
        3344: 0.00014444780018317002,
        4368: 0.0001287680361717401,
        4434: 0.0001264444939407735,
        5907: 0.0001264868555527292,
        4351: 0.00012092821802378,
        4651: 0.000120769530357868,
        4427: 0.0001206241362150313,
        8316: 0.0001241309930783235,
        9395: 0.0001226155234074055,
        1886: 0.000123873080487893,
        6029: 0.00012306524039331352,
        1476: 0.0001205191697621394,
        3482: 0.000120515319832851002,
        323: 0.0001204189188706044,
        6797: 0.00012137385451782752,
        1134: 0.00012137385451782752,
        4640: 9.3854920383804146e-05,
        9465: 9.376074528324696e-05,
        608: 9.375413883579956e-05,
        5175: 9.3793815919766176e-05,
        4762: 9.370361232454526e-05,
        968: 9.3690024572871456e-05,
        2931: 9.3689821096141946e-05,
        1204: 9.3475049157085836e-05,
        9714: 9.3510331119913156e-05,
        1224: 9.334037458463919e-05,
        8665: 9.333456688329336e-05,
        1336: 9.331833100999096e-05,
        7731: 9.330085544664605e-05,
        3528: 9.3189894764102566e-05,
        9140: 9.3262680813808e-05,
        4609: 9.305835762692616e-05,
        7102: 9.2955245616778776e-05,
        9848: 9.282791819729556e-05,
        2736: 9.2353449494755386e-05,
        6704: 9.175797038918845e-05
    },
    0.95: {
        9377: 0.00020119422624500165,
        2349: 0.0001941615742573066,
        7314: 0.0001884681494928576,
        5840: 0.00014824853158297745,
        3344: 0.00014444780018317002,
        4368: 0.0001287680361717401,
        4434: 0.00012664414939407735,
        5907: 0.000126588355527292,
        4351: 0.0001209282190293083,
        4651: 0.000120546345540448,
        4427: 0.0001204161594459094,
        8316: 0.0001241309930783235,
        9395: 0.0001238755622725224,
        1886: 0.000123873080487893,
        6029: 0.00012306524039331352,
        1476: 0.0001205191697621394,
        3482: 0.000120515319832851002,
        323: 0.0001204189188706044,
        6797: 0.00012137385451782752,
        1134: 0.00012137385451782752,
        4640: 9.3514216880815096e-05,
        9465: 9.3415349337738266e-05,
        608: 9.3400145889241766e-05,
        5175: 9.3390643628999e-05,
        4762: 9.3351269623020266e-05,
        968: 9.3340032903053126e-05,
        2931: 9.333093891592296e-05,
        1204: 9.3113219937597766e-05,
        9714: 9.299474494901846e-05,
        1224: 9.296025341959036e-05,
        8665: 9.296055005521126e-05,
        1336: 9.2948078351528416e-05,
        7731: 9.2929393112412496e-05,
        3528: 9.2809970090692596e-05,
        9140: 9.2744252816180136e-05,
        4609: 9.2672233911591266e-05,
        7102: 9.2558357891350606e-05,
        9848: 9.2426149284410756e-05,
        2736: 9.1928233866194916e-05,
        6704: 9.1299006980136226e-05
    }
}

def plot_d_weight():
    # Data
    d_weights = [0.75, 0.8, 0.85, 0.9, 0.95]
    sites = {
        9377: [0.00018010256314134285, 0.00018538607335335963, 0.00019066252036845308, 0.00019593190528720955,
               0.00020119422624500165],
        2349: [0.00017423146997644777, 0.00017920888913567948, 0.0001841897578921058, 0.0001891740544013589,
               0.00019416175742573066],
        7314: [0.00017122466362267313, 0.00017581552063571478, 0.0001803864199920985, 0.00018493731199232822,
               0.00018946814694328576],
        5840: [0.00013827814241471599, 0.00014078019435017497, 0.00014327595059694637, 0.00014576540021403854,
               0.00014824853158297745],
        3344: [0.00013528574828173366, 0.00013758611566839644, 0.00013987992001813888, 0.00014216715169082606,
               0.00014444780018317002]
    }

    # Plotting
    plt.figure(figsize=(10, 6))

    for site, pr_values in sites.items():
        plt.plot(d_weights, pr_values, label=f'Site {site}', marker='o')

    plt.xlabel('D weight')
    plt.ylabel('PageRank')
    plt.title('PageRank vs D for Top 5 Sites')
    plt.legend()
    plt.grid(True)
    plt.savefig("pagerank_vs_d_top_sites.jpg")
    plt.show()


def plot_top_down_sites():
    # Plotting
    plt.figure(figsize=(12, 8))
    for d_weight, p_values in data_topdown.items():
        pages = list(p_values.keys())
        pr_values = list(p_values.values())

        plt.plot(pages, pr_values, label=f'd={d_weight}', marker='o')

    plt.xlabel('Page (P)')
    plt.ylabel('PageRank Value')
    plt.title('PageRank vs Page for Different d')
    plt.legend()
    plt.grid(True)
    plt.savefig("all_pagerank.jpg")
    plt.show()

def plot_gap():
    differences = {}
    for d_weight, p_values in data_topdown.items():
        top_site = max(p_values.values())
        lowest_site = min(p_values.values())
        difference = top_site - lowest_site
        differences[d_weight] = difference

    # Plotting
    plt.figure(figsize=(10, 6))
    d_weights = list(differences.keys())
    diff_values = list(differences.values())

    plt.plot(d_weights, diff_values, label=f'd={d_weights}', marker='o')
    plt.xlabel('d')
    plt.ylabel('Difference in PageRank')
    plt.title('Difference Between Top and Lowest Site PageRank for Each d Factor')
    plt.grid(True)
    plt.savefig("differences.jpg")
    plt.show()

def plot_sparse_metrix():
    # Plotting the heatmap
    data2 = np.array([
        [0, 0, 0, 0, 0],
        [0, 0, 0.5, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0.8]
    ])
    plt.figure(figsize=(6, 6))
    plt.imshow(data2, cmap='viridis', interpolation='nearest')

    # Add color bar for reference
    plt.colorbar(label='Value')
    plt.title('Sparsity Visualization of the Metric')
    plt.xlabel('Column Index')
    plt.ylabel('Row Index')

    # Show the plot
    plt.show()

def plot_probability():
    total_prob = {
        0.75 : 1.,
        0.8 : 1.,
        0.85 : 1.,
        0.9 : 1.,
        0.95 : 1.
    }
    plt.figure(figsize=(10, 6))

    plt.plot(total_prob.keys(), total_prob.values(), marker='o')

    plt.xlabel('d weight')
    plt.ylabel('Total Probability')
    plt.title('Total Probability at different d')
    plt.legend()
    plt.grid(True)
    plt.savefig("total_prob.jpg")
    plt.show()

if __name__ == '__main__':
    # plot_d_weight()
    # plot_top_down_sites()
    # plot_gap()
    # plot_sparse_metrix()
    plot_probability()